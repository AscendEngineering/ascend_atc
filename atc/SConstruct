import subprocess

protoc_source = "messaging/definitions"
protoc_dest = "messaging/libs"
env = Environment() 

#path variables
doms_directory = 'third_party/ascend_doms/'
messaging_directory = doms_directory+'messaging/'
messaging_lib = messaging_directory+'libs/'
messaging_def = messaging_directory+'definitions/'

#create proto files
subprocess.check_call(["mkdir","-p", messaging_directory+"libs"])
subprocess.check_call("protoc -I=" + messaging_def + " --cpp_out=" + messaging_lib + " " + messaging_def+'status.proto', shell=True)

#messaging
messaging_files = Glob(messaging_lib + '*.cc')
messaging_files.extend(['atc_msg.cpp'])

#DOMS fields
doms_files = Glob(doms_directory + "*.cpp")

env=Environment(
    CPPDEFINES=[],
    CCFLAGS=['-g'],
    LIBS=['zmq', 'pqxx' ,'pq','protobuf'],
	LIBPATH=['/opt/vc/lib/',messaging_lib],
    CPPPATH=['third_party/cpp-base64','/usr/local/include',messaging_lib,doms_directory],
    SCONS_CXX_STANDARD='c++14')

env.Program('atc', ['main.cpp','ascenddb.cpp','ledger.cpp',messaging_files,doms_files])
#env.Program('worker', ['worker_main.cpp',messaging_files,doms_files])
