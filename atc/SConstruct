import subprocess

protoc_source = "messaging/definitions"
protoc_dest = "messaging/libs"
env = Environment() 

#create proto files
subprocess.check_call("protoc -I=messaging/definitions --cpp_out=messaging/libs messaging/definitions/status.proto", shell=True)

#messaging
messaging_files = Glob('messaging/libs/*.cc')
messaging_files.extend(['drone_msg.cpp','ascend_zmq.cpp'])

#constants
constant_files = ['constants.h']

#drone files
drone_files = ['drone.cpp','video_transmission.cpp',messaging_files,constant_files]

#opencv
opencv = ['opencv_core','opencv_highgui']

#base64
base64 = ['third_party/cpp-base64/base64.cpp']

env=Environment(
    CPPDEFINES=[],
    CCFLAGS=['-g'],
    LIBS=['zmq', 'pqxx' ,'pq','protobuf','raspicam','raspicam_cv',opencv],
	LIBPATH=[],
    CPPPATH=['third_party/cpp-base64'],
    SCONS_CXX_STANDARD='c++14')

env.Program('atc', ['main.cpp','ascenddb.cpp','ledger.cpp',messaging_files,constant_files])
env.Program('drone', ['drone_main.cpp',drone_files, 'config_handler.cpp',base64 ])
env.Program('worker', ['worker_main.cpp',messaging_files,constant_files])
