import subprocess

protoc_source = "messaging/definitions"
protoc_dest = "messaging/libs"
env = Environment() 

#path variables
doms_directory = 'third_party/ascend_doms/'
messaging_directory = doms_directory+'messaging/'
messaging_lib = messaging_directory+'libs/'
messaging_def = messaging_directory+'definitions/'

#create proto files
<<<<<<< HEAD
subprocess.check_call(["mkdir","-p", messaging_directory+"libs"])
subprocess.check_call("protoc -I=" + messaging_def + " --cpp_out=" + messaging_lib + " " + messaging_def+'status.proto', shell=True)

#messaging
messaging_files = Glob(messaging_lib + '*.cc')
messaging_files.extend(['atc_msg.cpp','ascend_zmq.cpp'])
=======
subprocess.check_call(["mkdir","-p","ascend_messaging/libs"])
subprocess.check_call("protoc -I=ascend_messaging/definitions --cpp_out=ascend_messaging/libs ascend_messaging/definitions/status.proto", shell=True)

#messaging
messaging_files = Glob('ascend_messaging/libs/*.cc')
messaging_files.extend(['drone_msg.cpp','ascend_zmq.cpp'])
>>>>>>> 657a443d91243fffd92a1f23c2d00e269ebd7715

#constants
constant_files = ['constants.h']

#drone files
#drone_files = ['drone.cpp','video_transmission.cpp',messaging_files,constant_files]

#opencv
opencv = ['opencv_core','opencv_highgui','opencv_imgcodecs']

#base64
base64 = ['third_party/cpp-base64/base64.cpp']

env=Environment(
    CPPDEFINES=[],
    CCFLAGS=['-g'],
    LIBS=['zmq', 'pqxx' ,'pq','protobuf',opencv],
<<<<<<< HEAD
	LIBPATH=['/opt/vc/lib/',messaging_lib],
    CPPPATH=['third_party/cpp-base64','/usr/local/include',messaging_lib],
=======
	LIBPATH=['/opt/vc/lib/','ascend_messaging/libs'],
    CPPPATH=['third_party/cpp-base64','/usr/local/include','ascend_messaging/libs'],
>>>>>>> 657a443d91243fffd92a1f23c2d00e269ebd7715
    SCONS_CXX_STANDARD='c++14')

env.Program('atc', ['main.cpp','ascenddb.cpp','ledger.cpp',messaging_files,constant_files])
#env.Program('drone', ['drone_main.cpp',drone_files, 'config_handler.cpp',base64 ])
env.Program('worker', ['worker_main.cpp',messaging_files,constant_files])
