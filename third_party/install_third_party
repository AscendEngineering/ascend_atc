#go into archives and extract all

for FILE in $(ls archive)
do
    tar -xzf archive/$FILE
done

#do what we can with apt-get
sudo apt-get install autoconf automake libtool curl make g++ unzip
sudo apt-get install scons
sudo apt-get install libtool-bin=2.4.6-9
sudo apt-get install libpq-dev=11.5-1+deb10u1
sudo apt-get install xmlto

#if raspberry pi
HARDWARE_INFO=$(hostnamectl)
if [[ $HARDWARE_INFO == *"raspberrypi"* ]]; then
	sudo apt-get install libraspberrypi-dev raspberrypi-kernel-headers
	sudo apt-get purge wolfram-engine
	sudo apt-get purge libreoffice*
	sudo apt-get clean
	sudo apt-get autoremove
fi


#zeromq
cd zeromq-4.3.2
./autogen.sh
./configure
make
make install 
cd ../
  
#cppzmq
cd cppzmq-4.5.0
mkdir build
cd build
cmake ..
sudo make -j4 install
cd ../../

#libpqxx
cd libpqxx-6.4.5
./configure
make
sudo make install
cd ..

#protobuf
cd protobuf-3.11.2
./configure
make
sudo make install
sudo ldconfig 
cd ..

#opencv
cd opencv-4.2.0
mkdir build
cd build
cmake .. -DBUILD_opencv_calib3d=OFF -DBUILD_opencv_cudabgsegm=OFF -DBUILD_opencv_dnn=OFF -DBUILD_opencv_features2d=OFF -DBUILD_opencv_flann=OFF -DBUILD_opencv_java=OFF -DBUILD_opencv_js=OFF -DBUILD_opencv_ml=OFF -DBUILD_opencv_objdetect=OFF -DBUILD_opencv_python=OFF
sudo make -j4 install
cd ../../

#raspicam
cd raspicam
mkdir build
cd build
cmake ..
make
sudo make install
sudo ldconfig
cd ../..

